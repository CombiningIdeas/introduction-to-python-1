'''
Программа по работе с текстом.
Имеется текст, программа должна предоставить следующую
информация по этому тексту:
1) Количество предложений
2) Количество слов
3) Количество чисел (не цифр)
Для считывания из файла, можно воспользоваться следующим кодом:
file = open("text.txt", encoding='utf-8')
text = file.read().replace('\n', ' ')
Пример работы программ
'''

'''
Текст:
После числа 100 идёт число 101, а потом уже идёт число 102?
Так что число 101 в этом случае не будет являться числом 102.
Я знаю, что так не бывает, но тут так написано, а значит, что тут может быть
всё что угодно!
И при этом, не является фактом, что это "что-то" не является числом 104.
Но в вопросе не было цифры 101 и поэтому, я должен был это учесть. Я учёл.
Вопрос, конечно, дурацкий, но, вот так вот. В этом случае я бы написал так:
число 101 не является числом 102.
'''

'''
file = open("text.txt", encoding='utf-8')
text = file.read().replace('\n', ' ')
'''
#Файл с текстом я назвал у себя на компьютере "tex1".
#В тексте изначально 92 слова, а не 83.
class text():
    
    def offersWorks(self):
        #Пункт 1:
        file = open("text.txt", encoding='utf-8')
        text = file.read().replace('\n', ' ')
        
        self.point = text.count(".")
        self.exclamation = text.count("!")
        self.question = text.count("?")
        self.ellipsis = text.count("...")

        self.offers = self.point + self.exclamation + self.question + self.ellipsis
        

        print("Предложений в тексте:", self.offers)

        #Пункт 2:
        '''
        number_of_word = len(text1.split(" "))
        #Фактически 92 слова в тексте, потому что слова через дефис считаются за одно, а не за 2.
        #А сдесь 93 слова вывечивает, а примере их 83, хотя даже word гворит, и я сам считал что их 92.
       
        
        print("Слов в тексте:", number_of_word)
        '''
        #А можно убрать этот фактор и написать логическими операциями
        #Второй способ:
        def is_word(count_word):
            try: #Попытаться посчитать переменную без указания типов данных.
                count_word #в 68 строке укаазан разделитель(пробел), тоесть пробел не считать, а знаки препинания сливаются со словами автоматически.
                return True
            except:
                return False

        jj = 0
        for count_word in text.split(): #Я написал тут без кавычек с пробелом и вывело 92 слова, т.к. пробел автоматический
            if is_word(count_word) == True: #а если с кавычками то 93, непонятно почему. Скорей всего дефис как то тут замешан, в одном слове.
                jj += 1

                                        
        print("Слов в тексте:", jj)

        
        #Пункт 3:
        
        def is_number(numbers):
            try:
                int(numbers) #Считаю только тип данных целых чисел.
                return True
            except:
                return False

        text1 = text.replace(",", " ,")
        text2 = text1.replace(".", " .")
        text3 = text2.replace("!", " !")
        text4 = text3.replace("?", " ?")

        nn = 0
        for numbers in text4.split():
            if is_number(numbers) == True:
                nn += 1

        print("Чисел в тексте:", nn)

       
analysisText = text()
analysisText.offersWorks()



